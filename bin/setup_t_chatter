#!/usr/bin/env ruby

require "bundler/setup"
require "t_chatter"

file_root = ENV["HOME"]
file_name = TChatter::ConfigSetup::CONFIG_FILE
file_location = "#{file_root}/#{file_name}"

unless File.exists? file_location
  puts <<-EOS
    Thanks for installing TChatter.
    A small Ruby application that allows you to chat with a your friends on a particular network

    This is the last process which basically sets up your application for you.
    Let us begin
  EOS
else
  print <<-EOS
    You seem to have this application configured already at: #{file_location}
    Do you want to overwrite your old configuration?(Y or N) :
  EOS
  exit if gets.chomp.downcase == 'n'
end

config = Hash.new(nil)

true_false_cmd = {
  'true' => true,
  'yes' => true,
  'y' => true,
  't' => true,
  '' => true,
  'false' => false,
  'no' => false,
  'n' => false,
  'f' => false
}

tfc_short = true_false_cmd.keys.reject{ |k, v| k == '' }.join(', ')

print "What is your name?(optional) : "
config[:user] = gets.chomp.strip

puts ""

print "Would you like to send messages?(optional) #enter (#{tfc_short}) : "
config[:send] = gets.chomp.strip

puts ""

print "Would you like to receive messages?(optional) #enter (#{tfc_short}) : "
config[:receive] = gets.chomp.strip

print "Enter your URL for the Server?(optional) : "
config[:host] = gets.chomp.strip


real_config = Hash.new(nil)
config.each{ |x, y|
  if [:send, :receive].include? x
    real_config[x] = true_false_cmd[y]
    real_config[x] = true unless true_false_cmd.keys.include? y
  else
    real_config[x] = y if !y.blank?
  end
}

real_config[:host] = TChatter::DEFAULT_URL unless real_config[:host]
real_config[:user_id] = TChatter::UNIQUE_ID

File.open(file_location, 'w') do |f|
  ::YAML.dump real_config, f
end

applications_to_be_supported = %w[ Slack HipChat ].join(', ')

puts <<-EOS
  Congratulations you have completed the basic setup. The file can be found at:
  #{file_location}

  To connect to TChatter
  run `t_chatter` from your terminal and watch the messages stream in


  Note: As part of the future plans, you would be able to connect TChatter to
  your #{applications_to_be_supported} application so you never miss a chat
EOS
